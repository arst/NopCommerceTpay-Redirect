/* 
 * Tpay.com Technical Documentation
 *
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * OpenAPI spec version: 1.1.1
 * Contact: pt@tpay.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines masspayment_err_desc
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum MasspaymentErrDesc
    {
        
        /// <summary>
        /// Enum FilethathasbeensentisnotCSVfile for value: File that has been sent is not CSV file
        /// </summary>
        [EnumMember(Value = "File that has been sent is not CSV file")]
        FilethathasbeensentisnotCSVfile = 1,
        
        /// <summary>
        /// Enum Incorrectchecksumsign for value: Incorrect checksum (sign)
        /// </summary>
        [EnumMember(Value = "Incorrect checksum (sign)")]
        Incorrectchecksumsign = 2,
        
        /// <summary>
        /// Enum Incorrectlineformat for value: Incorrect line format
        /// </summary>
        [EnumMember(Value = "Incorrect line format")]
        Incorrectlineformat = 3,
        
        /// <summary>
        /// Enum Incorrectbankaccountnumber for value: Incorrect bank account number
        /// </summary>
        [EnumMember(Value = "Incorrect bank account number")]
        Incorrectbankaccountnumber = 4,
        
        /// <summary>
        /// Enum Nameofthereceivermustnotbeempty for value: Name of the receiver must not be empty
        /// </summary>
        [EnumMember(Value = "Name of the receiver must not be empty")]
        Nameofthereceivermustnotbeempty = 5,
        
        /// <summary>
        /// Enum Nameofthereceiver1istoolongmax35characters for value: Name of the receiver 1 is too long – max, 35 characters
        /// </summary>
        [EnumMember(Value = "Name of the receiver 1 is too long – max, 35 characters")]
        Nameofthereceiver1istoolongmax35characters = 6,
        
        /// <summary>
        /// Enum Nameofthereceiver2istoolongmax35characters for value: Name of the receiver 2 is too long – max, 35 characters
        /// </summary>
        [EnumMember(Value = "Name of the receiver 2 is too long – max, 35 characters")]
        Nameofthereceiver2istoolongmax35characters = 7,
        
        /// <summary>
        /// Enum Nameofthereceiver3istoolongmax35characters for value: Name of the receiver 3 is too long – max, 35 characters
        /// </summary>
        [EnumMember(Value = "Name of the receiver 3 is too long – max, 35 characters")]
        Nameofthereceiver3istoolongmax35characters = 8,
        
        /// <summary>
        /// Enum Nameofthereceiver4istoolongmax35characters for value: Name of the receiver 4 is too long – max, 35 characters
        /// </summary>
        [EnumMember(Value = "Name of the receiver 4 is too long – max, 35 characters")]
        Nameofthereceiver4istoolongmax35characters = 9,
        
        /// <summary>
        /// Enum Incorrectamountformat for value: Incorrect amount format
        /// </summary>
        [EnumMember(Value = "Incorrect amount format")]
        Incorrectamountformat = 10,
        
        /// <summary>
        /// Enum Paymenttitlefieldmustnotbeempty for value: Payment title field must not be empty
        /// </summary>
        [EnumMember(Value = "Payment title field must not be empty")]
        Paymenttitlefieldmustnotbeempty = 11,
        
        /// <summary>
        /// Enum Paymenttitlefield1istoolongmax35characters for value: Payment title field 1 is too long – max. 35 characters
        /// </summary>
        [EnumMember(Value = "Payment title field 1 is too long – max. 35 characters")]
        Paymenttitlefield1istoolongmax35characters = 12,
        
        /// <summary>
        /// Enum Paymenttitlefield2istoolongmax35characters for value: Payment title field 2 is too long – max. 35 characters
        /// </summary>
        [EnumMember(Value = "Payment title field 2 is too long – max. 35 characters")]
        Paymenttitlefield2istoolongmax35characters = 13,
        
        /// <summary>
        /// Enum Internalerror for value: Internal error
        /// </summary>
        [EnumMember(Value = "Internal error")]
        Internalerror = 14,
        
        /// <summary>
        /// Enum FailedtoloadCSVfile for value: Failed to load CSV file
        /// </summary>
        [EnumMember(Value = "Failed to load CSV file")]
        FailedtoloadCSVfile = 15,
        
        /// <summary>
        /// Enum Transferprocessingerror for value: Transfer processing error
        /// </summary>
        [EnumMember(Value = "Transfer processing error")]
        Transferprocessingerror = 16,
        
        /// <summary>
        /// Enum Incorrectpackidorthepackagehasnotbeenfound for value: Incorrect pack_id or the package has not been found
        /// </summary>
        [EnumMember(Value = "Incorrect pack_id or the package has not been found")]
        Incorrectpackidorthepackagehasnotbeenfound = 17,
        
        /// <summary>
        /// Enum Packageauthorizationerror for value: Package authorization error
        /// </summary>
        [EnumMember(Value = "Package authorization error")]
        Packageauthorizationerror = 18,
        
        /// <summary>
        /// Enum Insufficientfundsforpackageautorization for value: Insufficient funds for package autorization
        /// </summary>
        [EnumMember(Value = "Insufficient funds for package autorization")]
        Insufficientfundsforpackageautorization = 19,
        
        /// <summary>
        /// Enum Packagehasalreadybeenauthorized for value: Package has already been authorized
        /// </summary>
        [EnumMember(Value = "Package has already been authorized")]
        Packagehasalreadybeenauthorized = 20,
        
        /// <summary>
        /// Enum Generalerror for value: General error
        /// </summary>
        [EnumMember(Value = "General error")]
        Generalerror = 21,
        
        /// <summary>
        /// Enum Loginerrorincorrentkeyorapipassword for value: Login error (incorrent key or api_password)
        /// </summary>
        [EnumMember(Value = "Login error (incorrent key or api_password)")]
        Loginerrorincorrentkeyorapipassword = 22,
        
        /// <summary>
        /// Enum Nosuchmethod for value: No such method
        /// </summary>
        [EnumMember(Value = "No such method")]
        Nosuchmethod = 23,
        
        /// <summary>
        /// Enum Accessdisabled for value: Access disabled
        /// </summary>
        [EnumMember(Value = "Access disabled")]
        Accessdisabled = 24,
        
        /// <summary>
        /// Enum AccessdeniedviaMerchantPanelsettings for value: Access denied (via Merchant Panel settings)
        /// </summary>
        [EnumMember(Value = "Access denied (via Merchant Panel settings)")]
        AccessdeniedviaMerchantPanelsettings = 25
    }

}
