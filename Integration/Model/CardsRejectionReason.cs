/* 
 * Tpay.com Technical Documentation
 *
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * OpenAPI spec version: 1.1.1
 * Contact: pt@tpay.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Acquirer (Elavon / eService) rejection code (see Acquirer (Elavon / eService) rejection codes for explanation)
    /// </summary>
    /// <value>Acquirer (Elavon / eService) rejection code (see Acquirer (Elavon / eService) rejection codes for explanation)</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum CardsRejectionReason
    {
        
        /// <summary>
        /// Enum _0 for value: 0
        /// </summary>
        [EnumMember(Value = "0")]
        _0 = 1,
        
        /// <summary>
        /// Enum _1 for value: 1
        /// </summary>
        [EnumMember(Value = "1")]
        _1 = 2,
        
        /// <summary>
        /// Enum _2 for value: 2
        /// </summary>
        [EnumMember(Value = "2")]
        _2 = 3,
        
        /// <summary>
        /// Enum _3 for value: 3
        /// </summary>
        [EnumMember(Value = "3")]
        _3 = 4,
        
        /// <summary>
        /// Enum _4 for value: 4
        /// </summary>
        [EnumMember(Value = "4")]
        _4 = 5,
        
        /// <summary>
        /// Enum _7 for value: 7
        /// </summary>
        [EnumMember(Value = "7")]
        _7 = 6,
        
        /// <summary>
        /// Enum _5 for value: 5
        /// </summary>
        [EnumMember(Value = "5")]
        _5 = 7,
        
        /// <summary>
        /// Enum _13 for value: 13
        /// </summary>
        [EnumMember(Value = "13")]
        _13 = 8,
        
        /// <summary>
        /// Enum _57 for value: 57
        /// </summary>
        [EnumMember(Value = "57")]
        _57 = 9,
        
        /// <summary>
        /// Enum _61 for value: 61
        /// </summary>
        [EnumMember(Value = "61")]
        _61 = 10,
        
        /// <summary>
        /// Enum _12 for value: 12
        /// </summary>
        [EnumMember(Value = "12")]
        _12 = 11,
        
        /// <summary>
        /// Enum _14 for value: 14
        /// </summary>
        [EnumMember(Value = "14")]
        _14 = 12,
        
        /// <summary>
        /// Enum _30 for value: 30
        /// </summary>
        [EnumMember(Value = "30")]
        _30 = 13,
        
        /// <summary>
        /// Enum _41 for value: 41
        /// </summary>
        [EnumMember(Value = "41")]
        _41 = 14,
        
        /// <summary>
        /// Enum _43 for value: 43
        /// </summary>
        [EnumMember(Value = "43")]
        _43 = 15,
        
        /// <summary>
        /// Enum _51 for value: 51
        /// </summary>
        [EnumMember(Value = "51")]
        _51 = 16,
        
        /// <summary>
        /// Enum _54 for value: 54
        /// </summary>
        [EnumMember(Value = "54")]
        _54 = 17,
        
        /// <summary>
        /// Enum _59 for value: 59
        /// </summary>
        [EnumMember(Value = "59")]
        _59 = 18,
        
        /// <summary>
        /// Enum _65 for value: 65
        /// </summary>
        [EnumMember(Value = "65")]
        _65 = 19,
        
        /// <summary>
        /// Enum _78 for value: 78
        /// </summary>
        [EnumMember(Value = "78")]
        _78 = 20,
        
        /// <summary>
        /// Enum _82 for value: 82
        /// </summary>
        [EnumMember(Value = "82")]
        _82 = 21,
        
        /// <summary>
        /// Enum N7 for value: N7
        /// </summary>
        [EnumMember(Value = "N7")]
        N7 = 22,
        
        /// <summary>
        /// Enum _99 for value: 99
        /// </summary>
        [EnumMember(Value = "99")]
        _99 = 23
    }

}
