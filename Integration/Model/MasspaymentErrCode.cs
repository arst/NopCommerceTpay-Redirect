/* 
 * Tpay.com Technical Documentation
 *
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * OpenAPI spec version: 1.1.1
 * Contact: pt@tpay.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines masspayment_err_code
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum MasspaymentErrCode
    {
        
        /// <summary>
        /// Enum ERR4 for value: ERR4
        /// </summary>
        [EnumMember(Value = "ERR4")]
        ERR4 = 1,
        
        /// <summary>
        /// Enum ERR6 for value: ERR6
        /// </summary>
        [EnumMember(Value = "ERR6")]
        ERR6 = 2,
        
        /// <summary>
        /// Enum ERR7 for value: ERR7
        /// </summary>
        [EnumMember(Value = "ERR7")]
        ERR7 = 3,
        
        /// <summary>
        /// Enum ERR8 for value: ERR8
        /// </summary>
        [EnumMember(Value = "ERR8")]
        ERR8 = 4,
        
        /// <summary>
        /// Enum ERR9 for value: ERR9
        /// </summary>
        [EnumMember(Value = "ERR9")]
        ERR9 = 5,
        
        /// <summary>
        /// Enum ERR10 for value: ERR10
        /// </summary>
        [EnumMember(Value = "ERR10")]
        ERR10 = 6,
        
        /// <summary>
        /// Enum ERR11 for value: ERR11
        /// </summary>
        [EnumMember(Value = "ERR11")]
        ERR11 = 7,
        
        /// <summary>
        /// Enum ERR12 for value: ERR12
        /// </summary>
        [EnumMember(Value = "ERR12")]
        ERR12 = 8,
        
        /// <summary>
        /// Enum ERR13 for value: ERR13
        /// </summary>
        [EnumMember(Value = "ERR13")]
        ERR13 = 9,
        
        /// <summary>
        /// Enum ERR14 for value: ERR14
        /// </summary>
        [EnumMember(Value = "ERR14")]
        ERR14 = 10,
        
        /// <summary>
        /// Enum ERR15 for value: ERR15
        /// </summary>
        [EnumMember(Value = "ERR15")]
        ERR15 = 11,
        
        /// <summary>
        /// Enum ERR16 for value: ERR16
        /// </summary>
        [EnumMember(Value = "ERR16")]
        ERR16 = 12,
        
        /// <summary>
        /// Enum ERR17 for value: ERR17
        /// </summary>
        [EnumMember(Value = "ERR17")]
        ERR17 = 13,
        
        /// <summary>
        /// Enum ERR18 for value: ERR18
        /// </summary>
        [EnumMember(Value = "ERR18")]
        ERR18 = 14,
        
        /// <summary>
        /// Enum ERR19 for value: ERR19
        /// </summary>
        [EnumMember(Value = "ERR19")]
        ERR19 = 15,
        
        /// <summary>
        /// Enum ERR20 for value: ERR20
        /// </summary>
        [EnumMember(Value = "ERR20")]
        ERR20 = 16,
        
        /// <summary>
        /// Enum ERR21 for value: ERR21
        /// </summary>
        [EnumMember(Value = "ERR21")]
        ERR21 = 17,
        
        /// <summary>
        /// Enum ERR22 for value: ERR22
        /// </summary>
        [EnumMember(Value = "ERR22")]
        ERR22 = 18,
        
        /// <summary>
        /// Enum ERR23 for value: ERR23
        /// </summary>
        [EnumMember(Value = "ERR23")]
        ERR23 = 19,
        
        /// <summary>
        /// Enum ERR24 for value: ERR24
        /// </summary>
        [EnumMember(Value = "ERR24")]
        ERR24 = 20,
        
        /// <summary>
        /// Enum ERR99 for value: ERR99
        /// </summary>
        [EnumMember(Value = "ERR99")]
        ERR99 = 21,
        
        /// <summary>
        /// Enum ERR98 for value: ERR98
        /// </summary>
        [EnumMember(Value = "ERR98")]
        ERR98 = 22,
        
        /// <summary>
        /// Enum ERR97 for value: ERR97
        /// </summary>
        [EnumMember(Value = "ERR97")]
        ERR97 = 23,
        
        /// <summary>
        /// Enum ERR31 for value: ERR31
        /// </summary>
        [EnumMember(Value = "ERR31")]
        ERR31 = 24,
        
        /// <summary>
        /// Enum ERR32 for value: ERR32
        /// </summary>
        [EnumMember(Value = "ERR32")]
        ERR32 = 25
    }

}
